{"version":3,"file":"static/js/896.642e6262.chunk.js","mappings":"6LAEaA,EAAS,kBACpB,4BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAEC,eAAgB,UAChCC,aAAa,GACbC,SAAS,EACTC,iBAAiB,GACjBC,iBAAiB,GACjBC,SAAS,GACTC,UAAU,6BAXd,MADoB,C,uJCAhBC,EAAW,+BACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAG,EADA,4BACsBF,EADtB,oBADlB,cACCI,EADD,OAKLC,QAAQC,IAAIF,EAASG,MALhB,kBAMEH,EAASG,MANX,kE,gCCGDC,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,4BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAGT,EAEc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEID,GAAa,GACbF,EAAS,MACHI,EAAc,GAJxB,SAKuBpB,EAAWW,GALlC,OAKUU,EALV,OAMIjB,QAAQC,IAAIgB,EAAKC,SACjBD,EAAKC,QAAQC,KAAI,YAA8B,IACvCC,EAAmB,CACvBvB,GAF0C,EAA1BA,GAGhBO,OAH0C,EAAtBA,OAIpBC,QAJ0C,EAAdA,SAM9B,OAAOW,EAAYK,KAAKD,EACzB,IACDT,EAAWK,GAff,kDAiBIM,EAAAA,GAAAA,MAAY,sCAjBhB,yBAmBIR,GAAa,GAnBjB,8EADc,uBAAC,WAAD,wBAuBdS,EACD,GAAE,CAAChB,KAGF,UAAC,KAAD,WACGM,IAAa,SAAC/B,EAAA,EAAD,IACZ4B,EAAQc,QAGR,eAAI3B,GAAG,UAAP,SACGa,EAAQS,KAAI,YAA8B,IAA3Bf,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASR,EAAS,EAATA,GAC/B,OACE,yBACE,SAACM,EAAD,CAAYC,OAAQA,EAAQC,QAASA,KAD9BR,EAIZ,OATH,qEAYF,SAAC,KAAD,CAAS4B,SAAS,gBAGvB,C","sources":["components/Loader/Loader.jsx","fetch-api/reviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import { CirclesWithBar } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div>\n    <CirclesWithBar\n      height=\"100\"\n      width=\"70\"\n      color=\"#3f51b5\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClass=\"\"\n      visible={true}\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      barColor=\"\"\n      ariaLabel=\"circles-with-bar-loading\"\n    />\n    ;\n  </div>\n);\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09a141b997a10edba2747d029eb90ca7';\n\nexport async function getReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  console.log(response.data);\n  return response.data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getReviews } from 'fetch-api/reviews';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <div>\n      <p>\n        <b>Author: {author}</b>\n      </p>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport default function Reviews () {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getReviewsData() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const reviewsData = [];\n        const resp = await getReviews(movieId);\n        console.log(resp.results);\n        resp.results.map(({ id, author, content }) => {\n          const movieReviewsData = {\n            id,\n            author,\n            content,\n          };\n          return reviewsData.push(movieReviewsData);\n        });\n        setReviews(reviewsData);\n      } catch (error) {\n        toast.error('We`re sorry, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getReviewsData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {!reviews.length ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul id=\"reviews\">\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <ReviewItem author={author} content={content} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n\n"],"names":["Loader","height","width","color","wrapperStyle","justifyContent","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","BASE_URL","API_KEY","getReviews","id","axios","response","console","log","data","ReviewItem","author","content","Reviews","movieId","useParams","useState","reviews","setReviews","setError","isLoading","setIsLoading","useEffect","reviewsData","resp","results","map","movieReviewsData","push","toast","getReviewsData","length","position"],"sourceRoot":""}