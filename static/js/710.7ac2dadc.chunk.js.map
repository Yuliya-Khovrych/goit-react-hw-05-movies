{"version":3,"file":"static/js/710.7ac2dadc.chunk.js","mappings":"6LAEaA,EAAS,kBACpB,4BACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAEC,eAAgB,UAChCC,aAAa,GACbC,SAAS,EACTC,iBAAiB,GACjBC,iBAAiB,GACjBC,SAAS,GACTC,UAAU,6BAXd,MADoB,C,yFCETC,EAAY,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC1D,OACE,0BACE,UAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMI,MAAOA,EAAlC,WACE,gBACEf,MAAM,QACNiB,IAAKJ,EAAM,0CAAsCA,GAAWK,EAC5DC,IAAKP,KAEP,wBAAKA,KACL,uBAAIE,QAIX,E,SChBYM,E,QAASC,GAAAA,GAAH,6ICENC,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQR,EAAY,EAAZA,MAClC,OACE,SAACK,EAAD,UACGG,EAAOC,KAAI,gBAAGb,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,YAAtB,OACV,yBACE,SAACJ,EAAD,CACEC,GAAIA,EACJC,MAAOA,EACPC,OAAQA,EACRC,YAAaA,EACbC,MAAOA,KANFJ,EADC,KAajB,C,6IClBKc,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFvC,cACCG,EADD,OAKLC,QAAQC,IAAIF,EAASG,MALhB,kBAMEH,EAASG,MANX,kE,oDCmDP,EAhDa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAqBD,EAAAA,EAAAA,UAAS,MAArBE,GAAT,eACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAmCjB,OAjCAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,wGAEIH,GAAa,GACbF,EAAS,MACHM,EAAY,GAJtB,SAKuBd,IALvB,OAKUe,EALV,OAMIZ,QAAQC,IAAIW,GAENC,EAAaD,EAAKE,QACxBd,QAAQC,IAAIY,GAEZA,EAAWnB,KACT,YAAwD,IAChDqB,EAAQ,CACZlC,GAFmD,EAApDA,GAGCC,MAHmD,EAAhDkC,eAIHjC,OAJmD,EAAhCkC,YAKnBjC,YALmD,EAAnBkC,cAOlC,OAAOP,EAAUQ,KAAKJ,EACvB,IAEHX,EAAUO,GAtBd,kDAwBIS,EAAAA,GAAAA,MAAY,sCAxBhB,yBA0BIb,GAAa,GA1BjB,8EADc,uBAAC,WAAD,wBA8Bdc,EACD,GAAE,KAGD,UAAC,KAAD,WACGf,IAAa,SAACtC,EAAA,EAAD,IACbyB,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,EAAQe,SAAUA,KAChD,SAAC,KAAD,CAASc,SAAS,gBAGvB,C","sources":["components/Loader/Loader.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","fetch-api/trending.js","pages/Home.jsx"],"sourcesContent":["import { CirclesWithBar } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div>\n    <CirclesWithBar\n      height=\"100\"\n      width=\"70\"\n      color=\"#3f51b5\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClass=\"\"\n      visible={true}\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      barColor=\"\"\n      ariaLabel=\"circles-with-bar-loading\"\n    />\n    ;\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport noPicture from '../../images/noPicture.png';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ id, title, poster, voteAverage, state }) => {\n  return (\n    <div>\n      <Link to={`/movies/${id}`} state={state}>\n        <img\n          width=\"380px\"\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPicture}\n          alt={title}\n        />\n        <h3>{title}</h3>\n        <p>{voteAverage}</p>\n      </Link>\n    </div>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster: PropTypes.string,\n  voteAverage: PropTypes.number,\n  state: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  list-style: none;\n  display: grid;\n  padding: 40px 0;\n  grid-template-columns: repeat(3, 380px);\n  gap: 30px;\n`;\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { Movies } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, state }) => {\n  return (\n    <Movies>\n      {movies.map(({ id, title, poster, voteAverage}) => (\n        <li key={id}>\n          <MovieItem\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            state={state}\n          />\n        </li>\n      ))}\n    </Movies>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      state: PropTypes.string,\n    })\n  ).isRequired,\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09a141b997a10edba2747d029eb90ca7';\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  console.log(response.data);\n  return response.data;\n}\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getTrending } from '../fetch-api/trending';\nimport { Loader } from '../components/Loader/Loader';\nimport { Container } from '../components/SharedLayout/SharedLayout.styled';\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMoviesData() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const movieData = [];\n        const resp = await getTrending();\n        console.log(resp);\n\n        const moviesInfo = resp.results;\n        console.log(moviesInfo);\n\n        moviesInfo.map(\n          ({ id, original_title, poster_path, vote_average }) => {\n            const movie = {\n              id,\n              title: original_title,\n              poster: poster_path,\n              voteAverage: vote_average,\n            };\n            return movieData.push(movie);\n          }\n        );\n        setMovies(movieData);\n      } catch {\n        toast.error('We`re sorry, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMoviesData();\n  }, []);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} location={location} />}\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n};\n\nexport default Home;"],"names":["Loader","height","width","color","wrapperStyle","justifyContent","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","MovieItem","id","title","poster","voteAverage","state","to","src","noPicture","alt","Movies","styled","MovieList","movies","map","BASE_URL","API_KEY","getTrending","axios","response","console","log","data","useState","setMovies","setError","isLoading","setIsLoading","location","useLocation","useEffect","movieData","resp","moviesInfo","results","movie","original_title","poster_path","vote_average","push","toast","getMoviesData","position"],"sourceRoot":""}