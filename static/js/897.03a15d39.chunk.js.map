{"version":3,"file":"static/js/897.03a15d39.chunk.js","mappings":"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","sources":["fetch-api/cast.js","components/Cast/CastItem.jsx","components/Cast/CastList.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","fetch-api/reviews.js","components/Reviews/Reviews.jsx","fetch-api/movie-details.js","components/MovieItemDetails/MovieItemDetails.styled.js","components/MovieItemDetails/MovieItemDetails.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09a141b997a10edba2747d029eb90ca7';\n\nexport async function getCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  console.log(response.data);\n  return response.data;\n}\n","import noPicture from '../../images/noPicture.png';\nimport PropTypes from 'prop-types';\n\nexport const CastItem = ({ character, name, poster }) => {\n  return (\n    <div>\n      <img\n        src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPicture}\n        alt={name}\n        width=\"250\"\n      />\n      <div>\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </div>\n    </div>\n  );\n};\n\nCastItem.propTypes = {\n  character: PropTypes.string,\n  name: PropTypes.string,\n  poster: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { CastItem } from 'components/Cast/CastItem';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <ul style={{ listStyle: 'none' }}>\n      {cast.map(({ id, character, name, poster }) => (\n        <li key={id}>\n          <CastItem character={character} name={name} poster={poster} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getCast } from 'fetch-api/cast';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList } from 'components/Cast/CastList';\n\nexport  default function Cast () {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getCastData() {\n        try {\n            setIsLoading(true);\n            setError(null);\n        const castData = [];\n            const resp = await getCast(movieId);\n            console.log(resp.cast);\n        resp.cast.map(({ id, character, name, profile_path }) => {\n          const movieCastData = { id, character, name, poster: profile_path };\n          return castData.push(movieCastData);\n        });\n        setCast(castData);            \n      } catch (error) {\n        toast.error('We`re sorry, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getCastData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <CastList cast={cast} />\n      ) : (\n        <p>There is no cast information for this movie</p>\n      )}\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n}","import { CirclesWithBar } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div>\n    <CirclesWithBar\n      height=\"100\"\n      width=\"70\"\n      color=\"#3f51b5\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClass=\"\"\n      visible={true}\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      barColor=\"\"\n      ariaLabel=\"circles-with-bar-loading\"\n    />\n    ;\n  </div>\n);\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09a141b997a10edba2747d029eb90ca7';\n\nexport async function getReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  console.log(response.data);\n  return response.data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getReviews } from 'fetch-api/reviews';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <div>\n      <p>\n        <b>Author: {author}</b>\n      </p>\n      <p>{content}</p>\n    </div>\n  );\n};\n\nexport default function Reviews () {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getReviewsData() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const reviewsData = [];\n        const resp = await getReviews(movieId);\n        console.log(resp.results);\n        resp.results.map(({ id, author, content }) => {\n          const movieReviewsData = {\n            id,\n            author,\n            content,\n          };\n          return reviewsData.push(movieReviewsData);\n        });\n        setReviews(reviewsData);\n      } catch (error) {\n        toast.error('We`re sorry, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getReviewsData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {!reviews.length ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul id=\"reviews\">\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <ReviewItem author={author} content={content} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '09a141b997a10edba2747d029eb90ca7';\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  console.log(response.data);\n  return response.data;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n  cursor: pointer;\n  width: 100px;\n  &:hover,\n  &:focus {\n    border: orangered;\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  padding: 20px 0;\n`;\n\nexport const InfoText = styled.div`\n  display: block;\n  margin-left: 20px;\n  padding: 20px 0;\n`;\n\nexport const GenreList = styled.li`\n  display: inline;\n  margin-right: 10px;\n`;\n","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport  Cast  from 'components/Cast/Cast';\nimport  Reviews  from 'components/Reviews/Reviews';\nimport { Button, Info, InfoText, GenreList } from './MovieItemDetails.styled';\nimport noPicture from '../../images/noPicture.png';\nimport PropTypes from 'prop-types';\n\nexport default function MovieItemDetails ({ movieInfo }) {\n  const { title, genres, poster, overview, rating } = movieInfo;\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Button to={backLinkHref}>◄ Go back</Button>\n      <Info>\n        <img\n          width=\"200px\"\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPicture}\n          alt={title}\n        />\n        <InfoText>\n          <h3>{title}</h3>\n          <p>Rating: {rating.toFixed(1)}</p>\n          <p>\n            <b>Overview</b>\n          </p>\n          <p>{overview}</p>\n          <p>\n            <b>Genres</b>\n          </p>\n          {genres.map(genre => (\n            <GenreList key={genre.id}>{genre.name}</GenreList>\n          ))}\n        </InfoText>\n      </Info>\n      <p>\n        <b>Additional information</b>\n      </p>\n      <ul>\n        <li>\n          <Link to=\"cast\" element={<Cast />} state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"reviews\"\n            element={<Reviews />}\n            state={{ from: backLinkHref }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nMovieItemDetails.propTypes = {\n  movieInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      genres: PropTypes.arrayOf(PropTypes.shape),\n      poster: PropTypes.string,\n      overview: PropTypes.string,\n      rating: PropTypes.number,\n    })\n  ),\n  poster: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getMovieDetails } from '../fetch-api/movie-details';\nimport  MovieItemDetails from '../components/MovieItemDetails/MovieItemDetails';\nimport { Container } from '../components/SharedLayout/SharedLayout.styled';\nimport { Loader } from '../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n\n  useEffect(() => {\n    async function getDetailsData() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { original_title, genres, overview, poster_path, vote_average } = await getMovieDetails(movieId);\n        const movieData = {\n          title: original_title,\n          genres: genres,\n          overview: overview,\n          poster: poster_path,\n          rating: vote_average,\n        };\n        setMovieData(movieData);\n      } catch (error) {\n        toast.error('We`re sorry, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetailsData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {movieData && <MovieItemDetails movieInfo={movieData} />}\n      <Toaster position=\"top-right\" />\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","getCast","id","axios","response","console","log","data","CastItem","character","name","poster","src","noPicture","alt","width","CastList","cast","style","listStyle","map","Cast","movieId","useParams","useState","setCast","setError","isLoading","setIsLoading","useEffect","castData","resp","movieCastData","profile_path","push","toast","getCastData","Loader","length","position","height","color","wrapperStyle","justifyContent","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","getReviews","ReviewItem","author","content","Reviews","reviews","setReviews","reviewsData","results","movieReviewsData","getReviewsData","getMovieDetails","Button","styled","NavLink","Info","InfoText","GenreList","MovieItemDetails","movieInfo","title","genres","overview","rating","backLinkHref","useLocation","state","from","to","toFixed","genre","element","movieData","setMovieData","original_title","poster_path","vote_average","getDetailsData"],"sourceRoot":""}